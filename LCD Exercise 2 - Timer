// include the library code:
#include <LiquidCrystal.h>
// BME354L - Palmeri - Spring 2013 Arduino Project

/*******************************************************

This program will test the LCD panel and the buttons

Mark Bramwell, July 2010

********************************************************/

// select the pins used on the LCD panel

LiquidCrystal lcd(8, 9, 4, 5, 6, 7);

// define some values used by the panel and buttons
boolean var = false;
int lcd_key = 0;
int adc_key_in = 0;
int Min=0;
int Sec=0;
boolean start=false;
char buf[10];                       // string buffer for itoa function
#define btnRIGHT 0
#define btnUP 1
#define btnDOWN 2
#define btnLEFT 3
#define btnSELECT 4
#define btnNONE 5
#define V1 50
#define V2 154
#define V3 379
#define V4 554
#define V5 791
#define VNONE 791
// read the buttons
int read_LCD_buttons()
{
adc_key_in = analogRead(0); // read the value from the sensor
// my buttons when read are centered at these valies: 0, 144, 329, 504, 741
// we add approx 50 to those values and check to see if we are close
if (adc_key_in > VNONE) return btnNONE; 
// We make this the 1st option for speed reasons since it will be the most likely result
else if (adc_key_in <= V1) return btnRIGHT;
else if (adc_key_in <= V2) return btnUP;
else if (adc_key_in <= V3) return btnDOWN;
else if (adc_key_in <= V4) return btnLEFT;
else if (adc_key_in <= V5) return btnSELECT;
return btnNONE; // when all others fail, return this...
}

void setup() {
  lcd.begin(16,2);
}

void loop()
{
     lcd.clear();                                         // clear the LDC

 if (Min < 10){                            // pad in leading zeros
      lcd.print("0");                                 // add a zero
      }

    lcd.print(itoa(Min, buf, 10));       // convert the int to a string and print a fractional part of 60 Minutes to the LCD
      lcd.print(":");                                 //print a colan. 

 if (Sec < 10){                            // pad in leading zeros
      lcd.print("0");                                 // add a zero
      }

 lcd.print(itoa(Sec, buf, 10)); 
lcd_key = read_LCD_buttons(); // read the buttons
delay(1000);
switch (lcd_key) // depending on which button was pushed, we perform an action
{
case btnRIGHT:
{
  if(var==true){
    if(Sec==59){
    Sec=0;
    }
    else{
  Sec=Sec+1;
    }
  }
  if(var==false){
    if(Min==59){
    Min=0;
    }
    else{
  Min=Min+1;
    }
  }
//Instructions for what to do on RIGHT button press

break;
}
case btnLEFT:
  if(var==true){
    if(Sec==0){
    Sec=59;
    }
    else{
  Sec=Sec-1;
    }
  }
  if(var==false){
    if(Min==0){
    Min=59;
    }
    else{
  Min=Min-1;
    }
//Instructions for what to do on LEFT button press
break;
}
case btnUP:
{
  if(start==false){
   if(var==true){
  var=false;
  }
  else if(var==false){
  var=true;
  }
  }
//Instructions for what to do on UP button press
break;
}
case btnDOWN:
{
  if(start==false){
  if(var==true){
  var=false;
  }
  else if(var==false){
  var=true;
  }
  }
//Instructions for what to do on DOWN button press
break;
}
case btnSELECT:
{
  if(start==true){
  start = false;
  }
  else if(start==false){
  start = true;
  }
//Instructions for what to do on SELECT button press
break;
}
case btnNONE:
{
  if(start==true){
    if(Sec==1 & Min==0){
    Sec=0;
    //flash
    lcd.blink();
    start=false;
    }
    else if(Sec==0){
    Sec=59;
    Min=Min-1;
    }
    else{
    Sec=Sec-1;
    } 
  }
//Instructions for what to do if no button is pressed.
break;
}
}
}
